{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  // 30 seconds\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Convert file to base64\nconst fileToBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n};\n\n// API functions\nexport const encryptImage = async (imageFile, key = 'default_key_123', algorithm = 'chaos', nonce) => {\n  try {\n    const imageData = await fileToBase64(imageFile);\n    const payload = {\n      image: imageData,\n      key: key,\n      algorithm: (algorithm || 'chaos').toLowerCase()\n    };\n    if (payload.algorithm === 'fodhnn' && nonce) {\n      payload.nonce = nonce;\n    }\n    const response = await api.post('/encrypt', payload);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Encryption error:', error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Encryption failed');\n  }\n};\nexport const decryptImage = async (imageFile, key = 'default_key_123', algorithm = 'chaos', nonce) => {\n  try {\n    const imageData = await fileToBase64(imageFile);\n    const payload = {\n      image: imageData,\n      key: key,\n      algorithm: (algorithm || 'chaos').toLowerCase()\n    };\n    if (payload.algorithm === 'fodhnn') {\n      if (!nonce) {\n        throw new Error('Nonce is required for FODHNN decryption');\n      }\n      payload.nonce = nonce;\n    }\n    const response = await api.post('/decrypt', payload);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Decryption error:', error);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Decryption failed');\n  }\n};\nexport const downloadImage = async filename => {\n  try {\n    const response = await api.get(`/download/${filename}`, {\n      responseType: 'blob'\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Download error:', error);\n    throw new Error('Download failed');\n  }\n};\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('Health check error:', error);\n    throw new Error('API health check failed');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","encryptImage","imageFile","key","algorithm","nonce","imageData","payload","image","toLowerCase","response","post","data","_error$response","_error$response$data","console","Error","decryptImage","_error$response2","_error$response2$data","downloadImage","filename","get","responseType","healthCheck"],"sources":["/Users/hueyyan/Documents/FIT3164/fyp-mds08/chaotic-encryption-app/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30 seconds\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Convert file to base64\nconst fileToBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\n// API functions\nexport const encryptImage = async (imageFile, key = 'default_key_123', algorithm = 'chaos', nonce) => {\n  try {\n    const imageData = await fileToBase64(imageFile);\n    \n    const payload = {\n      image: imageData,\n      key: key,\n      algorithm: (algorithm || 'chaos').toLowerCase(),\n    };\n    if (payload.algorithm === 'fodhnn' && nonce) {\n      payload.nonce = nonce;\n    }\n    const response = await api.post('/encrypt', payload);\n    \n    return response.data;\n  } catch (error) {\n    console.error('Encryption error:', error);\n    throw new Error(error.response?.data?.error || 'Encryption failed');\n  }\n};\n\nexport const decryptImage = async (imageFile, key = 'default_key_123', algorithm = 'chaos', nonce) => {\n  try {\n    const imageData = await fileToBase64(imageFile);\n    \n    const payload = {\n      image: imageData,\n      key: key,\n      algorithm: (algorithm || 'chaos').toLowerCase(),\n    };\n    if (payload.algorithm === 'fodhnn') {\n      if (!nonce) {\n        throw new Error('Nonce is required for FODHNN decryption');\n      }\n      payload.nonce = nonce;\n    }\n    const response = await api.post('/decrypt', payload);\n    \n    return response.data;\n  } catch (error) {\n    console.error('Decryption error:', error);\n    throw new Error(error.response?.data?.error || 'Decryption failed');\n  }\n};\n\nexport const downloadImage = async (filename) => {\n  try {\n    const response = await api.get(`/download/${filename}`, {\n      responseType: 'blob',\n    });\n    \n    return response.data;\n  } catch (error) {\n    console.error('Download error:', error);\n    throw new Error('Download failed');\n  }\n};\n\nexport const healthCheck = async () => {\n  try {\n    const response = await api.get('/health');\n    return response.data;\n  } catch (error) {\n    console.error('Health check error:', error);\n    throw new Error('API health check failed');\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}