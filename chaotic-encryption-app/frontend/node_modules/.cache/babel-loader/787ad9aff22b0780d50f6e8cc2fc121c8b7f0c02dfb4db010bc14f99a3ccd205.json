{"ast":null,"code":"var _jsxFileName = \"/Users/hueyyan/Documents/FIT3164/fyp-mds08/chaotic-encryption-app/frontend/src/pages/Encrypt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ImageUploader from '../components/ImageUploader';\nimport { encryptImage } from '../services/api';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Encrypt = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAlgoModal, setShowAlgoModal] = useState(false);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('chaos');\n  const [nonce, setNonce] = useState('');\n  const [error, setError] = useState('');\n  const [result, setResult] = useState(null);\n  const navigate = useNavigate();\n  const handleImageUpload = file => {\n    setSelectedFile(file);\n    setError('');\n    setResult(null);\n  };\n  const handleEncrypt = async () => {\n    if (!selectedFile) {\n      setError('Please select an image to encrypt');\n      return;\n    }\n    if (!encryptionKey.trim()) {\n      setError('Please enter an encryption key');\n      return;\n    }\n    // Open algorithm selection modal\n    setShowAlgoModal(true);\n  };\n  const confirmEncrypt = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await encryptImage(selectedFile, encryptionKey, selectedAlgorithm, selectedAlgorithm === 'fodhnn' ? nonce || undefined : undefined);\n      setResult(response);\n      setShowAlgoModal(false);\n      // Navigate to results page with the data\n      navigate('/results', {\n        state: {\n          type: 'encrypt',\n          data: response\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownload = async (imageData, filename) => {\n    try {\n      // Convert base64 to blob\n      const response = await fetch(`data:image/png;base64,${imageData}`);\n      const blob = await response.blob();\n\n      // Download the file\n      saveAs(blob, filename || 'encrypted_image.png');\n    } catch (err) {\n      setError('Download failed: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"\\uD83D\\uDD12 Encrypt Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload an image and encrypt it using chaotic encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          onImageUpload: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Selected:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 18\n            }, this), \" \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 18\n            }, this), \" \", (selectedFile.size / 1024 / 1024).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Encryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: encryptionKey,\n          onChange: e => setEncryptionKey(e.target.value),\n          placeholder: \"Enter encryption key (optional, default will be used if empty)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: '#666',\n            marginTop: '0.5rem',\n            display: 'block'\n          },\n          children: \"The key is used to generate chaotic sequences. Keep it secure for decryption.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleEncrypt,\n          disabled: isLoading || !selectedFile,\n          style: {\n            minWidth: '200px'\n          },\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              style: {\n                width: '20px',\n                height: '20px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), \"Encrypting...\"]\n          }, void 0, true) : 'ðŸ”’ Encrypt Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Encryption Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${result.original_image}`,\n            alt: \"Original\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-title\",\n            children: \"Original Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${result.encrypted_image}`,\n            alt: \"Encrypted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-title\",\n            children: \"Encrypted Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-center gap-2 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => handleDownload(result.encrypted_image, result.encrypted_filename),\n          children: \"\\uD83D\\uDCE5 Download Encrypted Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), showAlgoModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"modal-title\",\n            children: \"Choose Encryption Algorithm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Algorithm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"algorithm\",\n                  value: \"chaos\",\n                  checked: selectedAlgorithm === 'chaos',\n                  onChange: () => setSelectedAlgorithm('chaos')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Chaotic Logistic (default)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"algorithm\",\n                  value: \"fodhnn\",\n                  checked: selectedAlgorithm === 'fodhnn',\n                  onChange: () => setSelectedAlgorithm('fodhnn')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"FODHNN (fractional-order Hopfield)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), selectedAlgorithm === 'fodhnn' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Nonce (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              value: nonce,\n              onChange: e => setNonce(e.target.value),\n              placeholder: \"If empty, a nonce will be generated by the server\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#666',\n                marginTop: '0.5rem',\n                display: 'block'\n              },\n              children: \"Save the nonce with your key to decrypt later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer d-flex gap-2 justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: () => setShowAlgoModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: confirmEncrypt,\n            disabled: isLoading,\n            children: isLoading ? 'Encrypting...' : 'Confirm'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Encrypt, \"1iqjBhGvpGl0ORdO9Vj/0SB3jKY=\", false, function () {\n  return [useNavigate];\n});\n_c = Encrypt;\nexport default Encrypt;\nvar _c;\n$RefreshReg$(_c, \"Encrypt\");","map":{"version":3,"names":["React","useState","useNavigate","ImageUploader","encryptImage","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","Encrypt","_s","selectedFile","setSelectedFile","encryptionKey","setEncryptionKey","isLoading","setIsLoading","showAlgoModal","setShowAlgoModal","selectedAlgorithm","setSelectedAlgorithm","nonce","setNonce","error","setError","result","setResult","navigate","handleImageUpload","file","handleEncrypt","trim","confirmEncrypt","response","undefined","state","type","data","err","message","handleDownload","imageData","filename","fetch","blob","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onImageUpload","name","size","toFixed","value","onChange","e","target","placeholder","style","color","marginTop","display","onClick","disabled","minWidth","width","height","marginRight","src","original_image","alt","encrypted_image","encrypted_filename","checked","_c","$RefreshReg$"],"sources":["/Users/hueyyan/Documents/FIT3164/fyp-mds08/chaotic-encryption-app/frontend/src/pages/Encrypt.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ImageUploader from '../components/ImageUploader';\nimport { encryptImage } from '../services/api';\nimport { saveAs } from 'file-saver';\n\nconst Encrypt = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAlgoModal, setShowAlgoModal] = useState(false);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState('chaos');\n  const [nonce, setNonce] = useState('');\n  const [error, setError] = useState('');\n  const [result, setResult] = useState(null);\n  const navigate = useNavigate();\n\n  const handleImageUpload = (file) => {\n    setSelectedFile(file);\n    setError('');\n    setResult(null);\n  };\n\n  const handleEncrypt = async () => {\n    if (!selectedFile) {\n      setError('Please select an image to encrypt');\n      return;\n    }\n\n    if (!encryptionKey.trim()) {\n      setError('Please enter an encryption key');\n      return;\n    }\n    // Open algorithm selection modal\n    setShowAlgoModal(true);\n  };\n\n  const confirmEncrypt = async () => {\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await encryptImage(\n        selectedFile,\n        encryptionKey,\n        selectedAlgorithm,\n        selectedAlgorithm === 'fodhnn' ? (nonce || undefined) : undefined\n      );\n      setResult(response);\n      setShowAlgoModal(false);\n      // Navigate to results page with the data\n      navigate('/results', {\n        state: {\n          type: 'encrypt',\n          data: response\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDownload = async (imageData, filename) => {\n    try {\n      // Convert base64 to blob\n      const response = await fetch(`data:image/png;base64,${imageData}`);\n      const blob = await response.blob();\n\n      // Download the file\n      saveAs(blob, filename || 'encrypted_image.png');\n    } catch (err) {\n      setError('Download failed: ' + err.message);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">ðŸ”’ Encrypt Image</h2>\n          <p>Upload an image and encrypt it using chaotic encryption</p>\n        </div>\n\n        {error && (\n          <div className=\"alert alert-error\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label className=\"form-label\">Select Image</label>\n          <ImageUploader onImageUpload={handleImageUpload} />\n          {selectedFile && (\n            <div className=\"mt-2\">\n              <p><strong>Selected:</strong> {selectedFile.name}</p>\n              <p><strong>Size:</strong> {(selectedFile.size / 1024 / 1024).toFixed(2)} MB</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\">Encryption Key</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={encryptionKey}\n            onChange={(e) => setEncryptionKey(e.target.value)}\n            placeholder=\"Enter encryption key (optional, default will be used if empty)\"\n          />\n          <small style={{ color: '#666', marginTop: '0.5rem', display: 'block' }}>\n            The key is used to generate chaotic sequences. Keep it secure for decryption.\n          </small>\n        </div>\n\n        <div className=\"d-flex justify-center\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={handleEncrypt}\n            disabled={isLoading || !selectedFile}\n            style={{ minWidth: '200px' }}\n          >\n            {isLoading ? (\n              <>\n                <div className=\"spinner\" style={{ width: '20px', height: '20px', marginRight: '10px' }}></div>\n                Encrypting...\n              </>\n            ) : (\n              'ðŸ”’ Encrypt Image'\n            )}\n          </button>\n        </div>\n      </div>\n\n      {result && (\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3 className=\"card-title\">Encryption Results</h3>\n          </div>\n\n          <div className=\"image-preview\">\n            <div className=\"image-container\">\n              <img\n                src={`data:image/png;base64,${result.original_image}`}\n                alt=\"Original\"\n              />\n              <div className=\"image-title\">Original Image</div>\n            </div>\n            <div className=\"image-container\">\n              <img\n                src={`data:image/png;base64,${result.encrypted_image}`}\n                alt=\"Encrypted\"\n              />\n              <div className=\"image-title\">Encrypted Image</div>\n            </div>\n          </div>\n\n          <div className=\"d-flex justify-center gap-2 mt-3\">\n            <button\n              className=\"btn btn-success\"\n              onClick={() => handleDownload(result.encrypted_image, result.encrypted_filename)}\n            >\n              ðŸ“¥ Download Encrypted Image\n            </button>\n          </div>\n        </div>\n      )}\n\n      {showAlgoModal && (\n        <div className=\"modal-backdrop\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\">Choose Encryption Algorithm</h3>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label className=\"form-label\">Algorithm</label>\n                <div className=\"d-flex gap-2\">\n                  <label className=\"radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"algorithm\"\n                      value=\"chaos\"\n                      checked={selectedAlgorithm === 'chaos'}\n                      onChange={() => setSelectedAlgorithm('chaos')}\n                    />\n                    <span>Chaotic Logistic (default)</span>\n                  </label>\n                  <label className=\"radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"algorithm\"\n                      value=\"fodhnn\"\n                      checked={selectedAlgorithm === 'fodhnn'}\n                      onChange={() => setSelectedAlgorithm('fodhnn')}\n                    />\n                    <span>FODHNN (fractional-order Hopfield)</span>\n                  </label>\n                </div>\n              </div>\n              {selectedAlgorithm === 'fodhnn' && (\n                <div className=\"form-group\">\n                  <label className=\"form-label\">Nonce (optional)</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={nonce}\n                    onChange={(e) => setNonce(e.target.value)}\n                    placeholder=\"If empty, a nonce will be generated by the server\"\n                  />\n                  <small style={{ color: '#666', marginTop: '0.5rem', display: 'block' }}>\n                    Save the nonce with your key to decrypt later.\n                  </small>\n                </div>\n              )}\n            </div>\n            <div className=\"modal-footer d-flex gap-2 justify-end\">\n              <button className=\"btn btn-secondary\" onClick={() => setShowAlgoModal(false)}>Cancel</button>\n              <button className=\"btn btn-primary\" onClick={confirmEncrypt} disabled={isLoading}>\n                {isLoading ? 'Encrypting...' : 'Confirm'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Encrypt;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}