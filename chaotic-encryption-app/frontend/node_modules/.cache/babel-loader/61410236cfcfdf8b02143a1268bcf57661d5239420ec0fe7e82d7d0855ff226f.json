{"ast":null,"code":"var _jsxFileName = \"/Users/yanly/Monash/FYP/fyp-mds08/chaotic-encryption-app/frontend/src/pages/Decrypt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ImageUploader from '../components/ImageUploader';\nimport { decryptImage } from '../services/api';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Decrypt = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [decryptionKey, setDecryptionKey] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [result, setResult] = useState(null);\n  const [algorithm, setAlgorithm] = useState('chaos');\n  const [nonce, setNonce] = useState('');\n  const navigate = useNavigate();\n  const handleImageUpload = file => {\n    setSelectedFile(file);\n    setError('');\n    setResult(null);\n  };\n  const handleDecrypt = async () => {\n    if (!selectedFile) {\n      setError('Please select an encrypted image to decrypt');\n      return;\n    }\n    if (!decryptionKey.trim()) {\n      setError('Please enter the decryption key');\n      return;\n    }\n    if (algorithm === 'fodhnn' && !nonce.trim()) {\n      setError('Nonce is required for FODHNN decryption');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await decryptImage(selectedFile, decryptionKey, algorithm, algorithm === 'fodhnn' ? nonce : undefined);\n      setResult(response);\n\n      // Navigate to results page with the data\n      navigate('/results', {\n        state: {\n          type: 'decrypt',\n          data: response\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownload = async (imageData, filename) => {\n    try {\n      // Convert base64 to blob\n      const response = await fetch(`data:image/png;base64,${imageData}`);\n      const blob = await response.blob();\n\n      // Download the file\n      saveAs(blob, filename || 'decrypted_image.png');\n    } catch (err) {\n      setError('Download failed: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"\\uD83D\\uDD13 Decrypt Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload an encrypted image and decrypt it using the original key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Select Encrypted Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n          onImageUpload: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Selected:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 18\n            }, this), \" \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 18\n            }, this), \" \", (selectedFile.size / 1024 / 1024).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Decryption Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: decryptionKey,\n          onChange: e => setDecryptionKey(e.target.value),\n          placeholder: \"Enter the decryption key (must match the encryption key)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: '#666',\n            marginTop: '0.5rem',\n            display: 'block'\n          },\n          children: \"The decryption key must be exactly the same as the key used for encryption.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"algorithm\",\n              value: \"chaos\",\n              checked: algorithm === 'chaos',\n              onChange: () => setAlgorithm('chaos')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Chaotic Logistic (default)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"radio\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"algorithm\",\n              value: \"fodhnn\",\n              checked: algorithm === 'fodhnn',\n              onChange: () => setAlgorithm('fodhnn')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"FODHNN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), algorithm === 'fodhnn' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Nonce\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: nonce,\n          onChange: e => setNonce(e.target.value),\n          placeholder: \"Enter the nonce returned during encryption\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            color: '#666',\n            marginTop: '0.5rem',\n            display: 'block'\n          },\n          children: \"You must provide the exact nonce that was used/generated during FODHNN encryption.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleDecrypt,\n          disabled: isLoading || !selectedFile,\n          style: {\n            minWidth: '200px'\n          },\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              style: {\n                width: '20px',\n                height: '20px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), \"Decrypting...\"]\n          }, void 0, true) : '🔓 Decrypt Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Decryption Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${result.decrypted_image}`,\n            alt: \"Decrypted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-title\",\n            children: \"Decrypted Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-center gap-2 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => handleDownload(result.decrypted_image, result.decrypted_filename),\n          children: \"\\uD83D\\uDCE5 Download Decrypted Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Important Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            margin: 0,\n            paddingLeft: '1.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Key Requirement:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), \" You must use the exact same key that was used for encryption\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Image Format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), \" The encrypted image should be in PNG format\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), \" Maximum file size is 16MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Security:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), \" Never share your decryption key with others\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Decrypt, \"Hph48TJukYAgT9kpvn/fF3/nIMo=\", false, function () {\n  return [useNavigate];\n});\n_c = Decrypt;\nexport default Decrypt;\nvar _c;\n$RefreshReg$(_c, \"Decrypt\");","map":{"version":3,"names":["React","useState","useNavigate","ImageUploader","decryptImage","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","Decrypt","_s","selectedFile","setSelectedFile","decryptionKey","setDecryptionKey","isLoading","setIsLoading","error","setError","result","setResult","algorithm","setAlgorithm","nonce","setNonce","navigate","handleImageUpload","file","handleDecrypt","trim","response","undefined","state","type","data","err","message","handleDownload","imageData","filename","fetch","blob","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onImageUpload","name","size","toFixed","value","onChange","e","target","placeholder","style","color","marginTop","display","checked","onClick","disabled","minWidth","width","height","marginRight","src","decrypted_image","alt","decrypted_filename","margin","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/yanly/Monash/FYP/fyp-mds08/chaotic-encryption-app/frontend/src/pages/Decrypt.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ImageUploader from '../components/ImageUploader';\nimport { decryptImage } from '../services/api';\nimport { saveAs } from 'file-saver';\n\nconst Decrypt = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [decryptionKey, setDecryptionKey] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [result, setResult] = useState(null);\n  const [algorithm, setAlgorithm] = useState('chaos');\n  const [nonce, setNonce] = useState('');\n  const navigate = useNavigate();\n\n  const handleImageUpload = (file) => {\n    setSelectedFile(file);\n    setError('');\n    setResult(null);\n  };\n\n  const handleDecrypt = async () => {\n    if (!selectedFile) {\n      setError('Please select an encrypted image to decrypt');\n      return;\n    }\n\n    if (!decryptionKey.trim()) {\n      setError('Please enter the decryption key');\n      return;\n    }\n\n    if (algorithm === 'fodhnn' && !nonce.trim()) {\n      setError('Nonce is required for FODHNN decryption');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const response = await decryptImage(selectedFile, decryptionKey, algorithm, algorithm === 'fodhnn' ? nonce : undefined);\n      setResult(response);\n\n      // Navigate to results page with the data\n      navigate('/results', {\n        state: {\n          type: 'decrypt',\n          data: response\n        }\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDownload = async (imageData, filename) => {\n    try {\n      // Convert base64 to blob\n      const response = await fetch(`data:image/png;base64,${imageData}`);\n      const blob = await response.blob();\n\n      // Download the file\n      saveAs(blob, filename || 'decrypted_image.png');\n    } catch (err) {\n      setError('Download failed: ' + err.message);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">🔓 Decrypt Image</h2>\n          <p>Upload an encrypted image and decrypt it using the original key</p>\n        </div>\n\n        {error && (\n          <div className=\"alert alert-error\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label className=\"form-label\">Select Encrypted Image</label>\n          <ImageUploader onImageUpload={handleImageUpload} />\n          {selectedFile && (\n            <div className=\"mt-2\">\n              <p><strong>Selected:</strong> {selectedFile.name}</p>\n              <p><strong>Size:</strong> {(selectedFile.size / 1024 / 1024).toFixed(2)} MB</p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\">Decryption Key</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={decryptionKey}\n            onChange={(e) => setDecryptionKey(e.target.value)}\n            placeholder=\"Enter the decryption key (must match the encryption key)\"\n          />\n          <small style={{ color: '#666', marginTop: '0.5rem', display: 'block' }}>\n            The decryption key must be exactly the same as the key used for encryption.\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"form-label\">Algorithm</label>\n          <div className=\"d-flex gap-2\">\n            <label className=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"algorithm\"\n                value=\"chaos\"\n                checked={algorithm === 'chaos'}\n                onChange={() => setAlgorithm('chaos')}\n              />\n              <span>Chaotic Logistic (default)</span>\n            </label>\n            <label className=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"algorithm\"\n                value=\"fodhnn\"\n                checked={algorithm === 'fodhnn'}\n                onChange={() => setAlgorithm('fodhnn')}\n              />\n              <span>FODHNN</span>\n            </label>\n          </div>\n        </div>\n\n        {algorithm === 'fodhnn' && (\n          <div className=\"form-group\">\n            <label className=\"form-label\">Nonce</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={nonce}\n              onChange={(e) => setNonce(e.target.value)}\n              placeholder=\"Enter the nonce returned during encryption\"\n            />\n            <small style={{ color: '#666', marginTop: '0.5rem', display: 'block' }}>\n              You must provide the exact nonce that was used/generated during FODHNN encryption.\n            </small>\n          </div>\n        )}\n\n        <div className=\"d-flex justify-center\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={handleDecrypt}\n            disabled={isLoading || !selectedFile}\n            style={{ minWidth: '200px' }}\n          >\n            {isLoading ? (\n              <>\n                <div className=\"spinner\" style={{ width: '20px', height: '20px', marginRight: '10px' }}></div>\n                Decrypting...\n              </>\n            ) : (\n              '🔓 Decrypt Image'\n            )}\n          </button>\n        </div>\n      </div>\n\n      {result && (\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h3 className=\"card-title\">Decryption Results</h3>\n          </div>\n\n          <div className=\"image-preview\">\n            <div className=\"image-container\">\n              <img\n                src={`data:image/png;base64,${result.decrypted_image}`}\n                alt=\"Decrypted\"\n              />\n              <div className=\"image-title\">Decrypted Image</div>\n            </div>\n          </div>\n\n          <div className=\"d-flex justify-center gap-2 mt-3\">\n            <button\n              className=\"btn btn-success\"\n              onClick={() => handleDownload(result.decrypted_image, result.decrypted_filename)}\n            >\n              📥 Download Decrypted Image\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"card-title\">Important Notes</h3>\n        </div>\n\n        <div className=\"alert alert-info\">\n          <ul style={{ margin: 0, paddingLeft: '1.5rem' }}>\n            <li><strong>Key Requirement:</strong> You must use the exact same key that was used for encryption</li>\n            <li><strong>Image Format:</strong> The encrypted image should be in PNG format</li>\n            <li><strong>File Size:</strong> Maximum file size is 16MB</li>\n            <li><strong>Security:</strong> Never share your decryption key with others</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Decrypt;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}